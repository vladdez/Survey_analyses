{"title":"Linear models","markdown":{"yaml":{"title":"Linear models","format":{"html":{"toc":true,"html-math-method":"katex","css":"styles.css","code-fold":true,"code-summary":"Show the code"}},"editor":"visual"},"headingText":"Setup","containsRefs":false,"markdown":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(warning = FALSE, message = FALSE) \n```\n\n\n```{r, message= FALSE, warning=FALSE, echo=FALSE}\nlibrary(readxl)\nlibrary(foreach)\nlibrary(stringr)\nlibrary(dplyr)\nlibrary(tokenizers)\nlibrary(data.table)\nlibrary(ggplot2)\nlibrary(plyr)\nlibrary(quanteda)\nlibrary(purrr)\nlibrary(tidytext)\nlibrary(tm)\nlibrary(SnowballC)\nlibrary(Matrix)\nlibrary(text2vec)\nlibrary(tidyr)\nlibrary(janitor)\nlibrary(GGally)\nlibrary(formattable)\nlibrary(kableExtra)\nlibrary(FactoMineR)\nlibrary(psych)\nlibrary(factoextra)\n```\n\n```{r, message= FALSE, warning=FALSE}\ndata <- read_excel(\"data/results-survey.xlsx\")\ndata <- data[1:121] %>% \n  filter(.[[18]] !='Yes') # not analysed any EEG method\n```\n\n## Experience factor\n\n```{r, include=FALSE}\nexp_data <- data[c( 19, 20, 12, 21, 22)]\ncolnames(exp_data) <- c(\"n_papers\", \"years\", \"position\",\"self_level\", \"code_contribution\")\nexp_data\n\n\nshort <- exp_data[c(1:2, 5)] %>% mutate(code_contribution = ifelse(code_contribution==\"Yes\", 1, 0))\n\n# standardiye\n#remove outliers \n```\n\n```{r}\nm = FAMD(exp_data[1:5], ncp=2, axes=c(1,2))\n\n# pics <- fviz_famd_ind(m, col.ind = \"cos2\", \n#              gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"),\n#              repel = TRUE)\n\n```\n\n```{r}\nfactor_scores <- as.data.frame(m$ind$coord)\nhead(factor_scores)\n\ncbind(data[20], factor_scores[1])  %>% \n   rename_at(vars(colnames(.)), ~ c(\"years\", \"proxy\")) %>% \n  with(cor.test( proxy, years)) %>% \n  broom::tidy()\n  #lm(data=.,years ~ proxy) %>% summary(.)\n```\n\n## Experience and ...\n\n### Up or down\n\n```{r}\n\ncbind(data[79], factor_scores[1])  %>% \n   rename_at(vars(colnames(.)), ~ c(\"ud\", \"proxy\")) %>% filter(!is.na(ud)) %>% \n  mutate(ud = ifelse(ud==\"Up\", 1, 0)) %>% \n  t.test( proxy ~ ud , data=.) %>% \n  broom::tidy()\n\ncbind(data[79], factor_scores[1])  %>% \n   rename_at(vars(colnames(.)), ~ c(\"ud\", \"proxy\")) %>% filter(!is.na(ud)) %>% \n  ggplot(., aes(x=as.factor(ud), y = proxy)) + \n  geom_boxplot() + labs(x = \"Aware or not abour colorbar controvercies\", y = \"Experience\") +  theme_classic()\n```\n\n### Colorbars\n\n```{r, eval = FALSE, echo = FALSE}\n\ncbind(data[117], factor_scores[1])  %>% \n   rename_at(vars(colnames(.)), ~ c(\"cb_aware\", \"proxy\")) %>% filter(!is.na(cb_aware)) %>% \n  mutate(cb_aware = ifelse(cb_aware==\"Yes\", 1, 0)) %>% \n  #glm(data=., cb_aware ~ proxy) %>% summary(.)\n   t.test( proxy ~ cb_aware , data=.) %>% \n  broom::tidy()\n\ncbind(data[117], factor_scores[1])  %>% \n   rename_at(vars(colnames(.)), ~ c(\"cb_aware\", \"proxy\")) %>% filter(!is.na(cb_aware)) %>% \n  ggplot(., aes(x=as.factor(cb_aware), y = proxy)) + \n  geom_boxplot() + labs(x = \"Aware or not abour colorbar controvercies\", y = \"Experience\") +  theme_classic()\n```\n\n### Tools\n\n```{r, warning=FALSE}\nvec <- names(data[25:51]) %>% str_split_i(., \"\\\\? \\\\[\", 2) %>%  str_sub(., 1, -2)\n\nsoftware <- data[25:51] %>%\n    rename_at(vars(colnames(.)), ~ vec) %>% #mutate(`Custom scripts` = ifelse(Other == \"Custom scripts\", \"Yes\", `Custom scripts`)) %>% \n  dplyr::select(-Other) %>% \n  mutate_at(vars(vec[1:26]), function(., na.rm = FALSE) (x = ifelse(.==\"Yes\", 1, 0))) %>% \n  cbind(data[20], .) %>% dplyr::rename(years = !!names(.)[1]) %>% filter(years < 50) %>% \n  select_if(colSums(.) != 0)\n\n```\n\n```{r}\na <- software  %>% \n  select_if(colSums(.) > 10) \n\nres <- a %>%  dplyr::select(years, BESA) %>% \n  group_by(BESA) %>% dplyr::summarise(mean(years)) %>% dplyr::rename(., Usage = BESA, BESA = `mean(years)`)\n\ncn <- colnames(a[3:length(a)])\nfor (i in 1:length(cn)){\n  tmp <- a %>%  dplyr::select(years, cn[i]) %>% \n  group_by_at(2) %>% dplyr::summarise( mean(years)) %>%  dplyr::select(-1)\n  colnames(tmp) <- cn[i] \n  res <- cbind(res, tmp) \n  #print(cn[i])\n}\n res %>% t()  %>%\n  row_to_names(row_number = 1) %>% data.frame() %>% dplyr::rename(., not_used = X0, used = X1) %>% \n  tibble::rownames_to_column(., \"software\") %>%  \n  dplyr::mutate(., not_used = round(not_used, 2), used = round(used, 2)) %>% \n  dplyr::mutate(., status = ifelse(not_used > used, \"younger\", \"older\")) %>% \n  mutate(status = cell_spec(status, color = ifelse(status == \"younger\", \"green\", \"black\")))   %>% \n  kable(escape = F, booktabs = T) %>% kable_styling(\"striped\", position = \"center\",) %>%\n   add_header_above(header = c(\" \" = 1, \"Mean years of user experience\" = 3))   %>%\n  kable_classic(full_width = T, html_font = \"Arial\")\n\n\n\n```\n\n```{r, include=FALSE}\n# na.omit(data[51]) %>% nrow() # change others here \n# other <- c(rep(\"Custom scripts\", each=9), \"4DBTi\", rep(\"letswave\", 3), \"mTRF\", \"RAGU\", \"IGOR Pro\", \"EEGProcessor\", \"ELAN\", \"WinEEG\") %>% table(.) %>% data.frame(.) %>% rename_at(vars(colnames(.)), ~ c(\"soft\", \"sum_scores\"))\n# data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., \"soft\") %>% \n#   rename_at(vars(colnames(.)), ~ c(\"soft\", \"sum_scores\")) %>% \n#  rbind(., other) %>% dplyr::group_by(soft) %>% dplyr::summarise(sum_scores = sum(sum_scores)) \n```\n\n### Number of used software\n\n```{r}\nvec <- names(data[25:50]) %>% str_split_i(., \"\\\\? \\\\[\", 2) %>%  str_sub(., 1, -2)\n\nsoftware <- data[25:50] %>%\n    rename_at(vars(colnames(.)), ~ vec) %>% \n  mutate_at(vars(vec), function(., na.rm = FALSE) (x = ifelse(.==\"Yes\", 1, 0))) \n\n```\n\n```{r}\ncbind(data.frame(rowSums(software)), factor_scores[1])  %>% \n   rename_at(vars(colnames(.)), ~ c(\"n_soft\", \"experience\")) %>% \n  filter(n_soft > 0) %>% \n  ggplot(., aes(x=n_soft, y=experience)) + geom_jitter() + geom_smooth()\n```\n\n```{r}\ncbind(data.frame(rowSums(software)), factor_scores[1])  %>% \n   rename_at(vars(colnames(.)), ~ c(\"n_soft\", \"experience\")) %>% \n  filter(n_soft > 0) %>% \n  lm(data=., n_soft ~ experience) %>% summary(.)\n```\n\n### Features\n\n```{r}\nfeature <- data[52:60] %>% rename_all(., ~str_split_i(colnames(data[52:60]), \"\\\\? \\\\[\", 2) %>% \n                                        str_sub(., 1, -2) ) %>%  \n  mutate_at(c(colnames(.)), \n        funs(recode(.,\n        \"Very important\"= 2, \"Important\"= 1, \"Neutral\"= 0,\n        \"Low importance\"= -1, \"Not at all important\" = -2 )))  %>% \n  cbind(., factor_scores[1]) %>% \n    filter_all(all_vars(!is.na(.))) %>%  \n  rename_at(vars(colnames(.)), ~ c(\"subplot\", \"attributes\", \"speed\", \"publicable\", \"reproducable\", \n                                   \"zooming\", \"interactive\", \"gui\", \"coding\", \"experience\")) %>% \n  mutate(experience = round(experience, 2), exp_cut = cut(experience, 4, labels = c(\"25%\", \"50%\", \"75%\", \"100%\")), \n         exp_quant = factor(ntile(experience, 4))) %>% \n  group_by(exp_quant) %>% dplyr::mutate(n = n()) %>% ungroup() \n```\n\n```{r}\ntable(feature$exp_quant)\n```\n\n```{r}\nfeature %>% \n  pivot_longer(cols = subplot:coding, names_to = \"feature\", values_to = \"likert\") %>% \n  mutate(likert = likert + 3) %>% \n  group_by(feature, exp_quant) %>% dplyr::summarise(m = mean(likert)) %>% \n  ggplot(aes(y = m, x= exp_quant, fill = exp_quant)) + \n  geom_bar(stat = \"identity\") + \n  #geom_smooth(aes(y = value, x= experience, color = str_wrap(name, 20)), bw = 0.5, method = \"loess\", span = 0.7) + \n  labs(y = \"Mean likert scale value\", x=\"Experience quartiles\", color = \"Features\")  + theme_classic() +\n  theme(legend.position = \"none\", \n        legend.key.height=unit(2, \"cm\"), \n        axis.text.x = element_text(size = 12),\n        strip.text = element_text(size = 14)) + \n  facet_wrap(~str_wrap(feature, 20)) + \n  geom_text(aes(label = paste0(round(m, 1))),  position = position_stack(vjust = 0.5), size = 4) \n\n```\n\n```{r}\nfeature %>% \n  pivot_longer(cols = subplot:coding, names_to = \"feature\", values_to = \"likert\") %>%\n  mutate(likert = likert + 3) %>%\n  ggplot(aes(x = likert, fill= experience, colour = exp_quant)) + \n  geom_density(key_glyph = \"timeseries\", bw = 0.5) +\n  labs(x = \"Mean likert scale value\", y=\"Experience quartiles\", color = \"Experience\\nquantiles\")  + \n  theme_classic() + scale_colour_brewer(palette = \"Spectral\") +\n  theme(legend.position = \"right\", \n        #legend.key.height=unit(2, \"cm\"), \n        axis.text.x = element_text(size = 12),\n        strip.text = element_text(size = 14)) + \n  facet_wrap(~str_wrap(feature, 20)) \n```\n\n### Channels\n\n```{r}\ndata %>% select(23, 24) %>% \n  cbind(., factor_scores[1]) %>% \n  rename_at(vars(colnames(.)), ~ c(\"measure\", \"analyse\", \"experience\")) %>% \n  filter(analyse < 500) %>% \n  mutate(rate = analyse / measure) %>% \n  ggplot(., aes(x=rate, y=experience)) + \n  geom_point() + geom_smooth() +\n  labs(x =\"analyse / measure\") +\n  theme_classic()\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"html-math-method":"katex","output-file":"connections.html"},"language":{"code-summary":"Show the code"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.475","editor":"visual","theme":"cosmo","title":"Linear models"},"extensions":{"book":{"multiFile":true}}}}}