{
  "hash": "1c7fe99a49b33c370058664772edbf75",
  "result": {
    "markdown": "---\ntitle: \"exploration\"\nformat:\n  html:\n    toc: true\n    html-math-method: katex\n    css: styles.css\neditor: visual\n---\n\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# upload to the git\nlibrary(readxl)\nlibrary(foreach)\nlibrary(stringr)\nlibrary(dplyr)\nlibrary(tokenizers)\nlibrary(data.table)\nlibrary(ggplot2)\nlibrary(plyr)\nlibrary(quanteda)\nlibrary(SemNetCleaner)\nlibrary(purrr)\nlibrary(tidytext)\nlibrary(tm)\nlibrary(topicmodels)\nlibrary(SnowballC)\nlibrary(Matrix)\nlibrary(text2vec)\nlibrary(tidyr)\nlibrary(kableExtra)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_excel(\"data/results-survey3.xlsx\")\ndata <- data[1:121] %>% \n  filter(.[[18]] !='Yes') # not analysed any EEG method\n```\n:::\n\n\n## Bio stats\n\nCountry\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.frame(table(data[8])) %>% arrange(desc(Freq)) %>% dplyr::rename(country_work = !!names(.)[1]) %>%\n    ggplot(data = ., aes(y = reorder(country_work, Freq),  x= Freq)) +\n    geom_bar(stat=\"identity\") + ylab(\"Country of work for participant\") +\n    geom_text(aes(label = Freq), \n    hjust = -0.2)+ theme(legend.position=\"none\")\n```\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nField\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfield <- as.data.frame(table(data[9])) %>% arrange(desc(Freq)) %>% head(3)\nfield$Freq[1] <- field$Freq[1] + 1 # from Others\nfield$Freq[2] <- field$Freq[2] + 1\nfield$Freq[3] <- field$Freq[3] + 1\nfield %>% dplyr::rename(area = !!names(.)[1]) %>%\n    ggplot(data = ., aes(x = reorder(area, Freq),  y= Freq, fill = area)) +\n    geom_bar(stat=\"identity\") + xlab(\"Area of research\") +\n    geom_text(aes(label = Freq), \n    vjust = -0.2)+ theme(legend.position=\"none\")\n```\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n### Area\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt <- foreach(i = 1:nrow(data)) %do% tokenize_words(as.character(data[i, 11]))\ntt <- foreach(i = 1:length(t)) %do% paste(unlist(t[i]), collapse = ' ') \n\n\narea <- data.frame(matrix(tt)) %>% dplyr::rename(words = !!names(.)[1]) %>%\n  mutate(words = ifelse(str_detect(.[[1]], 'emot|empathy'), \"affective neuroscience\", words)) %>%  \n  #mutate(words =ifelse(str_detect(.[[1]], 'spatial'), \"spatial\", words)) %>% \n  mutate(words =ifelse(str_detect(.[[1]], 'memory'), \"memory\", words)) %>% \n  mutate(words =ifelse(str_detect(.[[1]], 'hearing|audit'), \"auditory\", words)) %>% \n  mutate(words =ifelse(str_detect(.[[1]], 'cognition|consciousness|meditation|cognitive control|self|executive functions'), \"cognitive control\", words)) %>% \n  mutate(words =ifelse(str_detect(.[[1]], 'dbs'), \"deep brain stimulation\", words)) %>% \n  mutate(words =ifelse(str_detect(.[[1]], 'decision making|reward'), \"decision making\", words)) %>% \n  mutate(words =ifelse(str_detect(.[[1]], 'ageing'), \"ageing\", words)) %>% \n  mutate(words =ifelse(str_detect(.[[1]], 'social'), \"social cognition\", words)) %>% \n  mutate(words =ifelse(str_detect(.[[1]], 'olfac'), \"olfaction\", words)) %>% \n  mutate(words =ifelse(str_detect(.[[1]], 'communication|language|speech|biling|english|language processing'), \"language and speech\", words)) %>% \n  mutate(words =ifelse(str_detect(.[[1]], 'bci'), \"bci\", words)) %>% \n  mutate(words =ifelse(str_detect(.[[1]], 'sleep'), \"sleep\", words)) %>% \n  mutate(words =ifelse(str_detect(.[[1]], 'timing|time|temporal'), \"time\", words)) %>% \n  mutate(words =ifelse(str_detect(.[[1]], 'cognitive load|selective attention|attention|perception'), \"attention and perception\", words)) %>% \n  mutate(words =ifelse(str_detect(.[[1]], 'vis'), \"vision\", words)) %>% \n  mutate(words =ifelse(str_detect(.[[1]], 'developmental|development'), \"development\", words)) %>% \n  mutate(words =ifelse(str_detect(.[[1]], 'spatial|brain body|motor|motion'), \"motor control\", words)) %>% \n  mutate(words =ifelse(str_detect(.[[1]], 'diagnostics|disorder|psychiatry|epilepsy|autism|patients|therapy|psychopharmacology'), \"mental disorders\", words)) %>%   \n  mutate(words =ifelse(str_detect(.[[1]], 'signal processing|event related potentials|method|sdf|ieeg'), \"dsp\", words))\n\n   \narea %>% group_by(words) %>% dplyr::summarise(Freq = n()) %>% \n  data.frame(.)  %>% mutate(words = as.character(words)) %>%  #arrange(desc(Freq)) %>% \n    ggplot(data = ., aes(y = reorder(words, Freq),  x= Freq)) +\n    geom_bar(stat=\"identity\") + ylab(\"Words\") +\n    geom_text(aes(label = Freq), \n    hjust = -0.2)\n```\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n### Method\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmethod <- data[14:17]\nch <- colnames(method)\nch1 <- foreach(i = ch) %do% str_split_i(i, \"\\\\[\", 2) \ncolnames(method) <- foreach(i = ch1) %do% str_sub(i, 1, -2)\nd <- data.frame(rowSums(t(data.frame(foreach(i = colnames(method)) %do% ifelse(method[i]==\"Yes\", 1, 0))))) \nd <- tibble::rownames_to_column(d, \"plots\") \ncolnames(d) <- c(\"method\", \"sum_scores\")\nd %>% arrange(desc(sum_scores)) %>% \n    ggplot(., aes(x = reorder(method, sum_scores), y = sum_scores, fill = method)) +\n    geom_col(stat = \"identity\") + labs(x = \"Method\", y = \"Value\", fill = \"Method\") +\n    theme_classic() + theme(legend.position=\"none\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in geom_col(stat = \"identity\"): Ignoring unknown parameters: `stat`\n```\n:::\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n### Experience\n\nPapers\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata[19] %>% dplyr::rename(papers = !!names(.)[1]) %>% filter(papers < 100) %>%  ggplot(data = ., aes(papers)) +\n  geom_histogram() +\n  labs(x =\"How many published papers/preprints do you have, where you used EEG, MEG or iEEG analysis?\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# PCA for clustering it \n```\n:::\n\n\nPosition\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#na.omit(data[13]) # recode Others\nas.data.frame(table(na.omit(data[12]))) %>% dplyr::rename(position = !!names(.)[1]) %>%\n  arrange(desc(Freq)) %>% \n    ggplot(data = ., aes(y = reorder(position, Freq),  x= Freq, fill = position)) +\n    geom_bar(stat=\"identity\") + ylab(\"Position\") +\n    geom_text(aes(label = Freq), \n    hjust = -0.2)+ theme(legend.position=\"none\")\n```\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nYears\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %>% filter(.[[20]] < 50) %>% ggplot(data = ., aes_(as.name(names(data)[20]))) +\n  geom_histogram() +  scale_x_continuous(breaks=seq(0, 30, 5)) +\n    labs(x =\"Years of experience with EEG, MEG, or iEEG analysis\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: `aes_()` was deprecated in ggplot2 3.0.0.\nâ„¹ Please use tidy evaluation idioms with `aes()`\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nSelf-assessed level\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(data[21]) %>% data.frame()%>% dplyr::rename(level = !!names(.)[1]) %>%\n    ggplot(data = ., aes(x = level, y= Freq, fill = level)) +\n    geom_bar(stat=\"identity\") + xlab(\"Self-assessed level\") +\n    geom_text(aes(label = Freq), vjust = -0.2) + theme(legend.position=\"none\") +\n    scale_x_discrete(limits = c(\"Beginner\", \"Intermediate\", \"Expert\"))\n```\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nCode contribution\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(data[22])  %>% data.frame()%>% dplyr::rename(level = !!names(.)[1]) %>%\n    ggplot(data = ., aes(x = reorder(level, Freq),  y= Freq, fill = level)) +\n    geom_bar(stat=\"identity\") + xlab(\"Code contribution\") +\n    geom_text(aes(label = Freq), vjust = -0.2) + theme(legend.position=\"none\")\n```\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n### Channels\n\nHow many channels do you typically measure?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %>% ggplot(data = ., aes_(as.name(names(data)[23]))) +\n  geom_histogram() +  scale_x_continuous(breaks=seq(0, 300, 30)) +\n    labs(x =\"How many channels do you typically measure?\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nHow many channels do you typically measure?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %>% filter(.[[24]] < 500) %>% ggplot(data = ., aes_(as.name(names(data)[24]))) +\n  geom_histogram() +  scale_x_continuous(breaks=seq(0, 300, 30))+\n    labs(x =\"How many channels of those you measured do you typically analyse?\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# plots should be combined\n```\n:::\n\n\n## Software usage\n\n#### frequency\n\n\n::: {.cell}\n\n```{.r .cell-code}\nna.omit(data[51]) %>% nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 20\n```\n:::\n\n```{.r .cell-code}\nother <- c(rep(\"Custom scripts\",each=9), \"4DBTi\", rep(\"letswave\", 3), \"mTRF\", \"RAGU\", \"IGOR Pro\", \"EEGProcessor\", \"ELAN\", \"WinEEG\") %>% table(.) %>% data.frame(.) %>% rename_at(vars(colnames(.)), ~ c(\"soft\", \"sum_scores\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvec <- names(data[25:50]) %>% str_split_i(., \"\\\\[\", 2) %>%  str_sub(., 1, -2)\n\nsoftware <- data[25:50] %>%\n    rename_at(vars(colnames(.)), ~ vec) %>% \n  mutate_at(vars(vec), function(., na.rm = FALSE) (x = ifelse(.==\"Yes\", 1, 0)))\n\n\nd <- data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., \"soft\") %>% \n   rename_at(vars(colnames(.)), ~ c(\"soft\", \"sum_scores\"))   %>% \n  rbind(., other) %>% dplyr::group_by(soft) %>% dplyr::summarise(sum_scores = sum(sum_scores)) %>% \n  arrange(., desc(sum_scores))\n\nd  %>% filter(sum_scores >= 1) %>% \n    ggplot(data = ., aes(y = reorder(soft, sum_scores),  x= sum_scores, fill = soft)) +\n    geom_bar(stat=\"identity\") + ylab(\"Soft\") +\n    geom_text(aes(label = sum_scores), \n    hjust = -0.2) + theme(legend.position=\"none\")\n```\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n#### cooccurence\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# how to order by diagonal matrix \n# how to add others\nsoftware <- data[25:50]\nch <- colnames(software)\nch1 <- foreach(i = ch) %do% str_split_i(i, \"\\\\[\", 2) \nch1 <- foreach(i = ch1) %do% str_sub(i, 1, -2)\nd1 <- foreach(i = colnames(software)) %do% ifelse(software[i]==\"Yes\", 1, 0)\nc <- crossprod(matrix(unlist(d1), ncol = 26))\nrownames(c) <- ch1\ncolnames(c) <- rownames(c)\n\ndiag.order <- order(diag(c), decreasing = FALSE)\nmat_reordered <- c[diag.order, diag.order]\n\nmelt(mat_reordered) %>% ggplot(., aes(x=Var1, y=Var2)) + \n  geom_tile(aes(fill = value)) + \n  geom_text(aes(label = value)) +\n  scale_fill_gradient(low = \"white\", high = \"red\") +\n  theme(legend.title = element_blank(),\n        axis.title=element_blank(),\n        axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) \n```\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n## Important features\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfeatures <- data[52:60]\nch <- colnames(features)\nch1 <- foreach(i = ch) %do% str_split_i(i, \"\\\\[\", 2) \ncolnames(features) <- foreach(i = ch1) %do% str_sub(i, 1, -2)\n\nfeatures <- features %>%  mutate_at(c(colnames(features)), \n        funs(recode(.,\n        \"Very important\"= 2, \"Important\"= 1, \"Neutral\"= 0,\n        \"Low importance\"= -1, \"Not at all important\" = -2 ))) %>% \n  colSums(., na.rm =T) %>% data.frame(.) %>%  tibble::rownames_to_column(., \"Feature\") %>% \n  arrange(desc(.))\ncolnames(features) <- c(\"Feature\", \"sum_scores\")\nfeatures %>%   kbl() \n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Feature </th>\n   <th style=\"text-align:right;\"> sum_scores </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Flexible tweaki.. </td>\n   <td style=\"text-align:right;\"> 284 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Presentation/pu.. </td>\n   <td style=\"text-align:right;\"> 222 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Reproducibility.. </td>\n   <td style=\"text-align:right;\"> 215 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Generating plot.. ]...6 </td>\n   <td style=\"text-align:right;\"> 213 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Combine with a .. </td>\n   <td style=\"text-align:right;\"> 115 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Zooming or pann.. </td>\n   <td style=\"text-align:right;\"> 104 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Speed of plotting </td>\n   <td style=\"text-align:right;\"> 77 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Interactive sel.. </td>\n   <td style=\"text-align:right;\"> 68 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Generating plot.. ]...5 </td>\n   <td style=\"text-align:right;\"> -68 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n```{.r .cell-code}\n# divide by number of people \n# individual plots\n# correlation with experience factor\n```\n:::\n\n\n## Familiarity with plots\n#### Recognition\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvec <- c(\"line\", \"butterfly\", \"topo\", \"topo_array\", \"topo_map\", \"erp_image\", \"parallel\", \"channel_image\")\nfamiliar <-  data[61:68] %>% rename_at(vars(colnames(.)), ~ vec) %>% \n  mutate_at(vars(vec), function(., na.rm = FALSE) (x = ifelse(.==\"Yes\", 1, 0)))\n\ndata.frame(rowSums(t(familiar))) %>%  tibble::rownames_to_column(., \"plot\") %>% \n   rename_at(vars(colnames(.)), ~ c(\"plot\", \"sum_scores\"))  %>% \n  arrange(., desc(sum_scores)) %>% \n  ggplot(data = ., aes(y = reorder(plot, sum_scores), x= sum_scores, fill=plot)) +\n  geom_bar(stat=\"identity\") + ylab(\"plot\") + \n  theme(legend.position=\"none\", plot.title = element_text(hjust = 0.5)) +\n  ggtitle(\"Select ERP plot you are familiar with\")\n```\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n#### Plotting\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvec <- names(data[ , grepl( \"Have you ever\" , names(data))]) %>% str_split_i(., \"\\\\.....\", 2) %>% as.numeric()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndo_vec <- function(vec, data){\n  t1 <- table(data[vec[1]])\n  for (i in 2:length(vec)) {\n    t <- table(data[vec[i]])\n    t1 <- rbind(t1, t)\n  }\n  rownames(t1) <- array(paste0(\"t_\", 1:length(vec)))\n  return(t1)\n}\ntab <- do_vec(vec, data) %>%  data.frame() %>% tibble::rownames_to_column(., \"plots\") %>%  \n  gather(., answer, score, `N.A`:`Yes`, factor_key=TRUE) %>% \n  mutate(answer = str_replace(answer, 'N.A', \"No\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in rbind(t1, t): number of columns of result is not a multiple of vector\nlength (arg 1)\n```\n:::\n\n```{.r .cell-code}\ntab %>% \n  ggplot(., aes(x = plots, y = score, fill = answer)) +\n    geom_bar(position = \"dodge\", stat = \"identity\") +\n    labs(x = \"Category\", y = \"Value\", fill = \"Group\") +\n    theme_classic() +  theme(plot.title = element_text(hjust = 0.5)) +\n  ggtitle(\"Have you ever plotted this kind of figure?\")\n```\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n#### Recognition and plotting\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvec <- names(data[ , grepl( \"Have you ever\" , names(data))]) %>% str_split_i(., \"\\\\.....\", 2) %>% as.numeric()\nplot_names <- c(\"line\", \"butterfly\", \"topo\", \"topo_array\", \"topo_map\", \"erp_img\", \"parallel\", \"channel_img\")\n\ndo_vec <- function(vec, data, plot_names){\n  t1 <- table(data[vec[1]])\n  for (i in 2:length(vec)) {\n    t <- table(data[vec[i]])\n    t1 <- rbind(t1, t)\n  }\n  rownames(t1) <- plot_names #array(paste0(\"t_\", 1:length(vec)))\n  return(t1)\n}\ntab <- do_vec(vec[2:length(vec)], data, plot_names) %>%  data.frame() %>% tibble::rownames_to_column(., \"plots\") %>%  \n  gather(., type, plotted, `N.A`:`Yes`, factor_key=TRUE) %>% \n  filter(type == \"Yes\") %>% dplyr::select(-type) \n\nfamiliar <-  data[61:68] %>% rename_at(vars(colnames(.)), ~ plot_names) %>% \n  mutate_at(vars(plot_names), function(., na.rm = FALSE) (x = ifelse(.==\"Yes\", 1, 0)))\n\ndata.frame(rowSums(t(familiar))) %>%  tibble::rownames_to_column(., \"plot\") %>% \n   rename_at(vars(colnames(.)), ~ c(\"plots\", \"recognized\")) %>% merge(., tab)  %>% \n  gather(., type, score,  recognized:plotted, factor_key=TRUE) %>% \n  ggplot(., aes(x = reorder(plots, -score), y = score, fill = type)) +\n    geom_bar(position = \"dodge\", stat = \"identity\") +\n    labs(x = \"Plot type\", y = \"Number of users\", fill = \"Level of familiarity\\nwith plot\") +\n    theme_classic() + geom_text(aes(label = score, group = type), position = position_dodge(width = .9), vjust = -0.2) +  theme(plot.title = element_text(hjust = 0.5)) +\n  ggtitle(\"Familiarity with plots\")\n```\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n## Up or down\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(data[79]) %>% data.frame() %>% rename_at(vars(colnames(.)), ~ c(\"position\", \"scores\")) %>% \n    ggplot(., aes(x = position, y = scores, fill = as.factor(scores))) +\n    geom_bar(position = \"dodge\", stat = \"identity\", width=0.5) + theme_classic() +\n  theme(axis.title.x=element_blank(), legend.position=\"none\", plot.title = element_text(hjust = 0.5)) +\n  geom_text(aes(label = scores, group = position), position = position_dodge(width = .9), vjust = -0.2) +\n  ggtitle(\"In ERP plot, should positive voltages be plotted upwards, or downwards?\")\n```\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n## Error bars\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(data[74]) %>% data.frame() %>% rename_at(vars(colnames(.)), ~ c(\"position\", \"scores\")) %>% \n    ggplot(., aes(x = position, y = scores, fill = as.factor(scores))) +\n    geom_bar(position = \"dodge\", stat = \"identity\", width=0.5) + theme_classic() +\n  theme(axis.title.x=element_blank(), legend.position=\"none\", plot.title = element_text(hjust = 0.5)) +\n  geom_text(aes(label = scores, group = position), position = position_dodge(width = .9), vjust = -0.2) +\n  ggtitle(\"In your paper, did you published ERP plot with error bars?\")\n```\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata[75] %>%  filter(!is.na(.)) %>% table()  %>% data.frame() %>% rename_at(vars(colnames(.)), ~ c(\"position\", \"scores\")) %>% \n    ggplot(., aes(x = position, y = scores, fill = as.factor(scores))) +\n    geom_bar(position = \"dodge\", stat = \"identity\", width=0.5) + theme_classic() +\n  theme(axis.title.x=element_blank(), legend.position=\"none\", plot.title = element_text(hjust = 0.5)) +\n  geom_text(aes(label = scores, group = position), position = position_dodge(width = .9), vjust = -0.2) +\n  ggtitle(\"In your figure, what did error bars depicted?\")\n```\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata[76] %>%  filter(!is.na(.)) %>% table()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nWhat did the er..  [Other]\n68% CI, which is close to SEM under normality \n                                            1 \n                    95% ci over channel means \n                                            1 \n          i'm not sure but i think it was sem \n                                            1 \n        median absolute deviaton or quantiles \n                                            1 \n                                           Sd \n                                            1 \n```\n:::\n:::\n\n\n## Baseline\n\n#### periods\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(abs(data[77])) %>% data.frame() %>%  dplyr::rename(baseline = !!names(.)[1]) %>%\n    ggplot(data = ., aes(x = baseline, y= Freq)) +\n    geom_bar(stat=\"identity\") + xlab(\"Recomended baseline in msec\") +  \n  scale_y_continuous(breaks=seq(0, 60, 5)) + theme_classic() +\n  theme(legend.position=\"none\", plot.title = element_text(hjust = 0.5)) +\n  geom_text(aes(label = Freq, group = baseline), position = position_dodge(width = .9), vjust = -0.2)\n```\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n#### justification\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# If you don't want to provide a number on previous question, please, provide a justification\n# depends on what??\n# manual categorization of depending\nj <- data %>%    \n  dplyr::rename(q = !!names(.)[78]) %>% filter(!is.na(q)) %>% dplyr::select(q) %>% \n  mutate(q = tolower(q)) %>% mutate(q = gsub('depends in|depending on', 'depends on', q),\n         dependson = ifelse(grepl(\"depends|depend\", q), q, NA)) %>% \n  separate(dependson, into = c(\"a\",\"b\"), sep = \"depends on |depend on \") %>% \n  dplyr::select(-a) %>% \n  dplyr::rename(dependson = b) #%>% \nj %>% filter(is.na(dependson))  %>% select(-dependson)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 17 Ã— 1\n   q                                                                            \n   <chr>                                                                        \n 1 minimum 200ms for erps and theta or beta power                               \n 2 should match the duration of baseline-correction                             \n 3 as a rule of thumb, i would plot at least 1/3 of the duration (post-stimulusâ€¦\n 4 half of the illustrated task interval                                        \n 5 in general i would always try to plot the full baseline period used for baseâ€¦\n 6 the same duration as the one used for baseline correction                    \n 7 at least 300, preferably more                                                \n 8 put down 100, but that's just what i typically use, might be diff for differâ€¦\n 9 at least the baseline window used for the baseline correction?               \n10 in this case it has sense as the -100 : 0 ms is not flat                     \n11 1/3 to 1/2 of the post-stimulus time plotted                                 \n12 i would plot the same baseline period as the one used for baseline correction\n13 i would recommend to plot the baseline period corresponding to the baseline-â€¦\n14 in general, i think it should be roughly the same length as the time window â€¦\n15 assuming the baseline is -250 to 0 ms, i would like to see activity before tâ€¦\n16 the actual baseline length you have in the experiment                        \n17 ideally, the entire duration for the baseline correction should be depicted  \n```\n:::\n\n```{.r .cell-code}\nj %>% filter(!is.na(dependson)) %>% select(dependson)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 32 Ã— 1\n   dependson                                                                    \n   <chr>                                                                        \n 1 \"the design of course\"                                                       \n 2 \"the topic\"                                                                  \n 3 \"the study. if you have interstimulus interval of 1 second and you expect toâ€¦\n 4 \"the experiment and research question\"                                       \n 5 \"the rest period between the measured evoked responses. e.g. it can be very â€¦\n 6 \"the analysis\"                                                               \n 7 \"paradigm, 100-300 ms range preferable\"                                      \n 8 \"the task design\"                                                            \n 9 \"the type of response (eg for mrcps response is seen before actual movement â€¦\n10 \"the task design, paradigm and signal of interest.\"                          \n# â€¦ with 22 more rows\n```\n:::\n\n```{.r .cell-code}\n  #View()\n```\n:::\n\n\n## Colorbars\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(data[117]) %>% data.frame() %>% rename_at(vars(colnames(.)), ~ c(\"position\", \"scores\")) %>% \n  ggplot(., aes(x = position, y = scores, fill = as.factor(scores))) +\n    geom_bar(position = \"dodge\", stat = \"identity\", width=0.5) + theme_classic() +\n  theme(axis.title.x=element_blank(), legend.position=\"none\", plot.title = element_text(hjust = 0.5)) +\n  geom_text(aes(label = scores, group = position), position = position_dodge(width = .9), vjust = -0.2) +\n  ggtitle(\"Are you aware of perceptual controvericies of colorbars?\")\n```\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(data[118]) %>% data.frame() %>% rename_at(vars(colnames(.)), ~ c(\"position\", \"scores\")) %>% \n  ggplot(., aes(x = position, y = scores, fill = as.factor(scores))) +\n    geom_bar(position = \"dodge\", stat = \"identity\", width=0.5) + theme_classic() +\n  theme(axis.title.x=element_blank(), legend.position=\"none\", plot.title = element_text(hjust = 0.5)) +\n  geom_text(aes(label = scores, group = position), position = position_dodge(width = .9), vjust = -0.2) +\n  ggtitle(\"Do you know about two-dimensional colorbars?\")\n```\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(data[119])  %>% data.frame() %>% rename_at(vars(colnames(.)), ~ c(\"position\", \"scores\")) %>% \n  ggplot(., aes(x = position, y = scores, fill = as.factor(scores))) +\n    geom_bar(stat = \"identity\", width=0.5)  + theme_classic() +\n  theme(axis.title.x=element_blank(), legend.position=\"none\", plot.title = element_text(hjust = 0.5)) +\n  geom_text(aes(label = scores, group = position), position = position_dodge(width = .9), vjust = -0.2) +\n  ggtitle(\"Would you like to use a two-dimensional colorbar\\nin your publications, if it was easily available?\")\n```\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n## Feedback\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfeed <- data[120] %>% dplyr::rename(feed = !!names(.)[1]) %>%  filter(!is.na(feed), feed != \"-\") #%>% View()\nfeed  %>%\n  filter(!row_number() %in% c(3, 14, 17, 32, 37, 41))# just appreciation\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 48 Ã— 1\n   feed                                                                         \n   <chr>                                                                        \n 1 \"Not only 2-d, but also CIRCULAR colorbars please\\r\\nThey are essential to vâ€¦\n 2 \"I think a great feature to have would be a selection of colors for comparisâ€¦\n 3 \"stop pushing this jet bullshit on me so hard\"                               \n 4 \"Make it very modular. It will be useless to experts or people trying somethâ€¦\n 5 \"This is more of a tangential comment, but one issue for me is lack of awareâ€¦\n 6 \"Easy creation of different types of error bars on ERP plots (shading)\"      \n 7 \"I use R for most analyses and visualization but matlab/eeglab/Erplab (for nâ€¦\n 8 \"Dynamic head montage videos\"                                                \n 9 \"I feel like Matlab is not very easy to implement in public and interactive â€¦\n10 \"I think everything that relates to plotting ERPs + results of statistical tâ€¦\n# â€¦ with 38 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n## Time of finishing survey in minutes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmedian(as.numeric(data$`Total time`)) / 60\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 14.0435\n```\n:::\n:::\n",
    "supporting": [
      "exploration_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\r\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}