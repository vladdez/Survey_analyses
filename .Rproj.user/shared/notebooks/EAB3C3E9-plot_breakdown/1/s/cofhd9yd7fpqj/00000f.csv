"0","word_preproc_tool_2 <- function(data, N, lim){"
"0","  #lim = 10"
"0","  tmp <- data %>% dplyr::select(N, N+1, N+2) %>% dplyr::rename(soft = !!names(.)[1], parts = !!names(.)[2], new_feature = !!names(.)[3]) %>% "
"0","    filter(!is.na(soft)) %>% "
"0","    mutate_at(vars(colnames(.)), funs(tolower(.))) %>% "
"0","    mutate(soft = str_replace(soft, 'own', ""custom""), "
"0","           soft = str_replace(soft, '(matlab)', ""matlab""), "
"0","           soft = case_when("
"0","      str_detect(soft, 'brain vision') ~ ""brain vision analyser"","
"0","      #str_detect(soft, 'matlab|bar.m|boundedline') ~ ""custom matlab"","
"0","      str_detect(soft, 'mne') ~ ""mne"","
"0","      TRUE ~ as.character(soft)"
"0","    ), "
"0","    parts = case_when("
"0","      str_detect(parts, 'none|n/a|nope|na|idk|nothing|sure|know|can\'t|don\'t') ~ ""-"","
"0","      TRUE ~ as.character(parts)"
"0","    ),"
"0","    new_feature = case_when("
"0","      str_detect(new_feature, 'none|n/a|nope|na|idk|nothing|sure|know|can\'t|don\'t') ~ ""-"","
"0","      TRUE ~ as.character(new_feature)"
"0","    )) %>% "
"0","  "
"0","    filter_at(vars(parts, new_feature), all_vars(!is.na(.))) %>% mutate(n = lengths(gregexpr(""\\W+"", soft)) + 1) %>% "
"0","    filter(parts != ""-"" | new_feature != ""-"", n < lim) %>%  dplyr::select(-4) %>% arrange(soft)"
"0","  return(tmp)"
"0","}"
