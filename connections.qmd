---
title: "Linear models"
format:
  html:
    toc: true
    html-math-method: katex
    css: styles.css
    code-fold: true
    code-summary: "Show the code"
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(warning = FALSE, message = FALSE) 
```

## Setup

```{r, message= FALSE, warning=FALSE, echo=FALSE}
library(readxl)
library(foreach)
library(stringr)
library(dplyr)
library(tokenizers)
library(data.table)
library(ggplot2)
library(plyr)
library(quanteda)
library(purrr)
library(tidytext)
library(tm)
library(SnowballC)
library(Matrix)
library(text2vec)
library(tidyr)
library(janitor)
library(GGally)
library(formattable)
library(kableExtra)
library(FactoMineR)
library(psych)
library(factoextra)
```

```{r, message= FALSE, warning=FALSE}
data <- read_excel("data/results-survey.xlsx")
data <- data[1:121] %>% 
  filter(.[[18]] !='Yes') # not analysed any EEG method
```

## Experience factor

```{r, include=FALSE}
exp_data <- data[c( 19, 20, 12, 21, 22)]
colnames(exp_data) <- c("n_papers", "years", "position","self_level", "code_contribution")
exp_data


short <- exp_data[c(1:2, 5)] %>% mutate(code_contribution = ifelse(code_contribution=="Yes", 1, 0))

# standardiye
#remove outliers 
```

```{r}
m = FAMD(exp_data[1:5], ncp=2, axes=c(1,2))

# pics <- fviz_famd_ind(m, col.ind = "cos2", 
#              gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
#              repel = TRUE)

```

```{r}
factor_scores <- as.data.frame(m$ind$coord)
head(factor_scores)

cbind(data[20], factor_scores[1])  %>% 
   rename_at(vars(colnames(.)), ~ c("years", "proxy")) %>% 
  with(cor.test( proxy, years)) %>% 
  broom::tidy()
  #lm(data=.,years ~ proxy) %>% summary(.)
```

## Experience and ...

### Up or down

```{r}

cbind(data[79], factor_scores[1])  %>% 
   rename_at(vars(colnames(.)), ~ c("ud", "proxy")) %>% filter(!is.na(ud)) %>% 
  mutate(ud = ifelse(ud=="Up", 1, 0)) %>% 
  t.test( proxy ~ ud , data=.) %>% 
  broom::tidy()

cbind(data[79], factor_scores[1])  %>% 
   rename_at(vars(colnames(.)), ~ c("ud", "proxy")) %>% filter(!is.na(ud)) %>% 
  ggplot(., aes(x=as.factor(ud), y = proxy)) + 
  geom_boxplot() + labs(x = "Aware or not abour colorbar controvercies", y = "Experience") +  theme_classic()
```

### Colorbars

```{r, eval = FALSE, echo = FALSE}

cbind(data[117], factor_scores[1])  %>% 
   rename_at(vars(colnames(.)), ~ c("cb_aware", "proxy")) %>% filter(!is.na(cb_aware)) %>% 
  mutate(cb_aware = ifelse(cb_aware=="Yes", 1, 0)) %>% 
  #glm(data=., cb_aware ~ proxy) %>% summary(.)
   t.test( proxy ~ cb_aware , data=.) %>% 
  broom::tidy()

cbind(data[117], factor_scores[1])  %>% 
   rename_at(vars(colnames(.)), ~ c("cb_aware", "proxy")) %>% filter(!is.na(cb_aware)) %>% 
  ggplot(., aes(x=as.factor(cb_aware), y = proxy)) + 
  geom_boxplot() + labs(x = "Aware or not abour colorbar controvercies", y = "Experience") +  theme_classic()
```

### Tools

```{r, warning=FALSE}
vec <- names(data[25:51]) %>% str_split_i(., "\\? \\[", 2) %>%  str_sub(., 1, -2)

software <- data[25:51] %>%
    rename_at(vars(colnames(.)), ~ vec) %>% #mutate(`Custom scripts` = ifelse(Other == "Custom scripts", "Yes", `Custom scripts`)) %>% 
  dplyr::select(-Other) %>% 
  mutate_at(vars(vec[1:26]), function(., na.rm = FALSE) (x = ifelse(.=="Yes", 1, 0))) %>% 
  cbind(data[20], .) %>% dplyr::rename(years = !!names(.)[1]) %>% filter(years < 50) %>% 
  select_if(colSums(.) != 0)

```

```{r}
a <- software  %>% 
  select_if(colSums(.) > 10) 

res <- a %>%  dplyr::select(years, BESA) %>% 
  group_by(BESA) %>% dplyr::summarise(mean(years)) %>% dplyr::rename(., Usage = BESA, BESA = `mean(years)`)

cn <- colnames(a[3:length(a)])
for (i in 1:length(cn)){
  tmp <- a %>%  dplyr::select(years, cn[i]) %>% 
  group_by_at(2) %>% dplyr::summarise( mean(years)) %>%  dplyr::select(-1)
  colnames(tmp) <- cn[i] 
  res <- cbind(res, tmp) 
  #print(cn[i])
}
 res %>% t()  %>%
  row_to_names(row_number = 1) %>% data.frame() %>% dplyr::rename(., not_used = X0, used = X1) %>% 
  tibble::rownames_to_column(., "software") %>%  
  dplyr::mutate(., not_used = round(not_used, 2), used = round(used, 2)) %>% 
  dplyr::mutate(., status = ifelse(not_used > used, "younger", "older")) %>% 
  mutate(status = cell_spec(status, color = ifelse(status == "younger", "green", "black")))   %>% 
  kable(escape = F, booktabs = T) %>% kable_styling("striped", position = "center",) %>%
   add_header_above(header = c(" " = 1, "Mean years of user experience" = 3))   %>%
  kable_classic(full_width = T, html_font = "Arial")



```

```{r, include=FALSE}
# na.omit(data[51]) %>% nrow() # change others here 
# other <- c(rep("Custom scripts", each=9), "4DBTi", rep("letswave", 3), "mTRF", "RAGU", "IGOR Pro", "EEGProcessor", "ELAN", "WinEEG") %>% table(.) %>% data.frame(.) %>% rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))
# data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>% 
#   rename_at(vars(colnames(.)), ~ c("soft", "sum_scores")) %>% 
#  rbind(., other) %>% dplyr::group_by(soft) %>% dplyr::summarise(sum_scores = sum(sum_scores)) 
```

### Number of used software

```{r}
vec <- names(data[25:50]) %>% str_split_i(., "\\? \\[", 2) %>%  str_sub(., 1, -2)

software <- data[25:50] %>%
    rename_at(vars(colnames(.)), ~ vec) %>% 
  mutate_at(vars(vec), function(., na.rm = FALSE) (x = ifelse(.=="Yes", 1, 0))) 

```

```{r}
cbind(data.frame(rowSums(software)), factor_scores[1])  %>% 
   rename_at(vars(colnames(.)), ~ c("n_soft", "experience")) %>% 
  filter(n_soft > 0) %>% 
  ggplot(., aes(x=n_soft, y=experience)) + geom_jitter() + geom_smooth()
```

```{r}
cbind(data.frame(rowSums(software)), factor_scores[1])  %>% 
   rename_at(vars(colnames(.)), ~ c("n_soft", "experience")) %>% 
  filter(n_soft > 0) %>% 
  lm(data=., n_soft ~ experience) %>% summary(.)
```

### Features

```{r}
feature <- data[52:60] %>% rename_all(., ~str_split_i(colnames(data[52:60]), "\\? \\[", 2) %>% 
                                        str_sub(., 1, -2) ) %>%  
  mutate_at(c(colnames(.)), 
        funs(recode(.,
        "Very important"= 2, "Important"= 1, "Neutral"= 0,
        "Low importance"= -1, "Not at all important" = -2 )))  %>% 
  cbind(., factor_scores[1]) %>% 
    filter_all(all_vars(!is.na(.))) %>%  
  rename_at(vars(colnames(.)), ~ c("subplot", "attributes", "speed", "publicable", "reproducable", 
                                   "zooming", "interactive", "gui", "coding", "experience")) %>% 
  mutate(experience = round(experience, 2), exp_cut = cut(experience, 4, labels = c("25%", "50%", "75%", "100%")), 
         exp_quant = factor(ntile(experience, 4))) %>% 
  group_by(exp_quant) %>% dplyr::mutate(n = n()) %>% ungroup() 
```

```{r}
table(feature$exp_quant)
```

```{r}
feature %>% 
  pivot_longer(cols = subplot:coding, names_to = "feature", values_to = "likert") %>% 
  mutate(likert = likert + 3) %>% 
  group_by(feature, exp_quant) %>% dplyr::summarise(m = mean(likert)) %>% 
  ggplot(aes(y = m, x= exp_quant, fill = exp_quant)) + 
  geom_bar(stat = "identity") + 
  #geom_smooth(aes(y = value, x= experience, color = str_wrap(name, 20)), bw = 0.5, method = "loess", span = 0.7) + 
  labs(y = "Mean likert scale value", x="Experience quartiles", color = "Features")  + theme_classic() +
  theme(legend.position = "none", 
        legend.key.height=unit(2, "cm"), 
        axis.text.x = element_text(size = 12),
        strip.text = element_text(size = 14)) + 
  facet_wrap(~str_wrap(feature, 20)) + 
  geom_text(aes(label = paste0(round(m, 1))),  position = position_stack(vjust = 0.5), size = 4) 

```

```{r}
feature %>% 
  pivot_longer(cols = subplot:coding, names_to = "feature", values_to = "likert") %>%
  mutate(likert = likert + 3) %>%
  ggplot(aes(x = likert, fill= experience, colour = exp_quant)) + 
  geom_density(key_glyph = "timeseries", bw = 0.5) +
  labs(x = "Mean likert scale value", y="Experience quartiles", color = "Experience\nquantiles")  + 
  theme_classic() + scale_colour_brewer(palette = "Spectral") +
  theme(legend.position = "right", 
        #legend.key.height=unit(2, "cm"), 
        axis.text.x = element_text(size = 12),
        strip.text = element_text(size = 14)) + 
  facet_wrap(~str_wrap(feature, 20)) 
```

### Channels

```{r}
data %>% select(23, 24) %>% 
  cbind(., factor_scores[1]) %>% 
  rename_at(vars(colnames(.)), ~ c("measure", "analyse", "experience")) %>% 
  filter(analyse < 500) %>% 
  mutate(rate = analyse / measure) %>% 
  ggplot(., aes(x=rate, y=experience)) + 
  geom_point() + geom_smooth() +
  labs(x ="analyse / measure") +
  theme_classic()
```
