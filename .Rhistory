vec <- names(data[25:49]) %>% str_split_i(., "\\[", 2) %>%  str_sub(., 1, -2)
# upload to the git
library(readxl)
library(foreach)
library(stringr)
library(dplyr)
library(tokenizers)
library(data.table)
library(ggplot2)
library(plyr)
library(quanteda)
library(SemNetCleaner)
library(purrr)
library(tidytext)
library(tm)
library(topicmodels)
library(SnowballC)
library(Matrix)
library(text2vec)
library(tidyr)
data <- read_excel("data/results-survey3.xlsx")
data <- data[1:121] %>%
filter(.[[18]] !='Yes') # not analysed any EEG method
vec <- names(data[25:49]) %>% str_split_i(., "\\[", 2) %>%  str_sub(., 1, -2)
software <- data[25:49] %>%
rename_at(vars(colnames(.)), ~ vec) %>%
mutate_at(vars(vec), function(., na.rm = FALSE) (x = ifelse(.=="Yes", 1, 0)))
d <- data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>%
rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))  %>% arrange(., desc(sum_scores))
d
# piechart and cooccuerence plot
library(kableExtra)
d %>%
kbl() %>%
kable_styling()
d  %>%
ggplot(data = ., aes(y = reorder(soft, sum_scores),  x= sum_scores, fill = soft)) +
geom_bar(stat="identity") + ylab("Soft") +
geom_text(aes(label = sum_scores),
hjust = -0.2)+ theme(legend.position="none")
d  %>% filter(sum_scores > 1) %>%
ggplot(data = ., aes(y = reorder(soft, sum_scores),  x= sum_scores, fill = soft)) +
geom_bar(stat="identity") + ylab("Soft") +
geom_text(aes(label = sum_scores),
hjust = -0.2)+ theme(legend.position="none")
d  %>% filter(sum_scores >= 1) %>%
ggplot(data = ., aes(y = reorder(soft, sum_scores),  x= sum_scores, fill = soft)) +
geom_bar(stat="identity") + ylab("Soft") +
geom_text(aes(label = sum_scores),
hjust = -0.2)+ theme(legend.position="none")
# how many items were choosen
table(data.frame(rowSums(software)))
View(software)
na.omit(data[51]) %>%
kbl() %>%
kable_styling()
View(data)
vec <- names(data[25:50]) %>% str_split_i(., "\\[", 2) %>%  str_sub(., 1, -2)
software <- data[25:50] %>%
rename_at(vars(colnames(.)), ~ vec) %>%
mutate_at(vars(vec), function(., na.rm = FALSE) (x = ifelse(.=="Yes", 1, 0)))
d <- data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>%
rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))  %>% arrange(., desc(sum_scores))
d  %>% filter(sum_scores >= 1) %>%
ggplot(data = ., aes(y = reorder(soft, sum_scores),  x= sum_scores, fill = soft)) +
geom_bar(stat="identity") + ylab("Soft") +
geom_text(aes(label = sum_scores),
hjust = -0.2)+ theme(legend.position="none")
c("a"*3)
c(repeat("a"))
repeat(1)
rep(c("Custom scripts"),each=9)
na.omit(data[51]) %>% nrow()
c(rep("Custom scripts",each=9), "4DBTi", rep("letswave", 3), "mTRF", "RAGU", "IGOR Pro", "EEGProcessor", "ELAN", "WinEEG")
other <- c(rep("Custom scripts",each=9), "4DBTi", rep("letswave", 3), "mTRF", "RAGU", "IGOR Pro", "EEGProcessor", "ELAN", "WinEEG")
data[25:50] %>%
rename_at(vars(colnames(.)), ~ vec) %>%
mutate_at(vars(vec), function(., na.rm = FALSE) (x = ifelse(.=="Yes", 1, 0)))
data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>%
rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))
data.frame(rowSums(t(software)))
t(software)
rowSums(t(software))
data.frame(rowSums(t(software)))
d <-
data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>%
rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))  %>% arrange(., desc(sum_scores))
data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>%
rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))  %>% arrange(., desc(sum_scores))
other
other <- c(rep("Custom scripts",each=9), "4DBTi", rep("letswave", 3), "mTRF", "RAGU", "IGOR Pro", "EEGProcessor", "ELAN", "WinEEG") %>% table(.)
other
other <- c(rep("Custom scripts",each=9), "4DBTi", rep("letswave", 3), "mTRF", "RAGU", "IGOR Pro", "EEGProcessor", "ELAN", "WinEEG") %>% table(.) %>% data.frame(.)
other
c(rep("Custom scripts",each=9), "4DBTi", rep("letswave", 3), "mTRF", "RAGU", "IGOR Pro", "EEGProcessor", "ELAN", "WinEEG") %>% table(.) %>% data.frame(.) %>% rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))
other <- c(rep("Custom scripts",each=9), "4DBTi", rep("letswave", 3), "mTRF", "RAGU", "IGOR Pro", "EEGProcessor", "ELAN", "WinEEG") %>% table(.) %>% data.frame(.) %>% rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))
data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>%
rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))  %>% arrange(., desc(sum_scores)) %>% merge(., other)
data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>%
rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))  %>% arrange(., desc(sum_scores)) %>% rbind(., other)
data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>%
rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))  %>% arrange(., desc(sum_scores)) %>% rbind(., other) %>% table(soft)
data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>%
rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))  %>% arrange(., desc(sum_scores)) %>% rbind(., other) %>% group_by(soft) %>% summarise(sum_scores = sum(sum_scores))
data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>%
rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))  %>% arrange(., desc(sum_scores)) %>%
rbind(., other) %>% group_by(soft)
data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>%
rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))  %>% arrange(., desc(sum_scores)) %>%
rbind(., other) %>% group_by(soft) %>% mutate(sum_scores = sum(sum_scores))
data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>%
rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))  %>% arrange(., desc(sum_scores)) %>%
rbind(., other) %>% group_by(soft) %>% mutate(n = sum(sum_scores))
data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>%
rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))  %>% arrange(., desc(sum_scores)) %>%
rbind(., other) %>% dplyr::group_by(soft) %>% mutate(n = sum(sum_scores))
data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>%
rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))  %>% arrange(., desc(sum_scores)) %>%
rbind(., other) %>% dplyr::group_by(soft) %>% mutate(n = sum(sum_scores))
data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>%
rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))  %>% arrange(., desc(sum_scores)) %>%
rbind(., other) %>% dplyr::group_by(soft) %>% dplyr::mutate(n = sum(sum_scores))
data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>%
rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))  %>% arrange(., desc(sum_scores)) %>%
rbind(., other) %>% dplyr::group_by(soft) %>% dplyr::mutate(sum_scores = sum(sum_scores))
data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>%
rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))  %>% arrange(., desc(sum_scores)) %>%
rbind(., other) %>% dplyr::group_by(soft) %>% dplyr::summarise(sum_scores = sum(sum_scores))
data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>%
rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))   %>%
rbind(., other) %>% dplyr::group_by(soft) %>% dplyr::summarise(sum_scores = sum(sum_scores)) %>% arrange(., desc(sum_scores))
d  %>% filter(sum_scores >= 1) %>%
ggplot(data = ., aes(y = reorder(soft, sum_scores),  x= sum_scores, fill = soft)) +
geom_bar(stat="identity") + ylab("Soft") +
geom_text(aes(label = sum_scores),
hjust = -0.2)+ theme(legend.position="none")
d <- data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>%
rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))   %>%
rbind(., other) %>% dplyr::group_by(soft) %>% dplyr::summarise(sum_scores = sum(sum_scores)) %>%
arrange(., desc(sum_scores))
d  %>% filter(sum_scores >= 1) %>%
ggplot(data = ., aes(y = reorder(soft, sum_scores),  x= sum_scores, fill = soft)) +
geom_bar(stat="identity") + ylab("Soft") +
geom_text(aes(label = sum_scores),
hjust = -0.2)+ theme(legend.position="none")
# how to order by diagonal matrix
software <- data[25:50]
ch <- colnames(software)
ch1 <- foreach(i = ch) %do% str_split_i(i, "\\[", 2)
ch1 <- foreach(i = ch1) %do% str_sub(i, 1, -2)
d1 <- foreach(i = colnames(software)) %do% ifelse(software[i]=="Yes", 1, 0)
d <- crossprod(matrix(unlist(d1), ncol = 25))
rownames(d) <- ch1
# how to order by diagonal matrix
software <- data[25:50]
ch <- colnames(software)
ch1 <- foreach(i = ch) %do% str_split_i(i, "\\[", 2)
ch1 <- foreach(i = ch1) %do% str_sub(i, 1, -2)
d1 <- foreach(i = colnames(software)) %do% ifelse(software[i]=="Yes", 1, 0)
d <- crossprod(matrix(unlist(d1), ncol = 25))
rownames(d) <- ch1
ch1 <- foreach(i = ch) %do% str_split_i(i, "\\[", 2)
ch1 <- foreach(i = ch1) %do% str_sub(i, 1, -2)
d1 <- foreach(i = colnames(software)) %do% ifelse(software[i]=="Yes", 1, 0)
d <- crossprod(matrix(unlist(d1), ncol = 25))
# how to order by diagonal matrix
software <- data[25:50]
ch <- colnames(software)
ch1 <- foreach(i = ch) %do% str_split_i(i, "\\[", 2)
ch1 <- foreach(i = ch1) %do% str_sub(i, 1, -2)
d1 <- foreach(i = colnames(software)) %do% ifelse(software[i]=="Yes", 1, 0)
d <- crossprod(matrix(unlist(d1), ncol = 25))
rownames(d) <- ch1
rownames(d) <- ch1
d <- crossprod(matrix(unlist(d1), ncol = 25))
# how to order by diagonal matrix
software <- data[25:50]
ch <- colnames(software)
d
ch1
rownames(d) <- ch1
d  %>% filter(sum_scores >= 1) %>%
ggplot(data = ., aes(y = reorder(soft, sum_scores),  x= sum_scores, fill = soft)) +
geom_bar(stat="identity") + ylab("Soft") +
geom_text(aes(label = sum_scores),
hjust = -0.2)+ theme(legend.position="none")
d <- data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>%
rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))   %>%
rbind(., other) %>% dplyr::group_by(soft) %>% dplyr::summarise(sum_scores = sum(sum_scores)) %>%
arrange(., desc(sum_scores))
d  %>% filter(sum_scores >= 1) %>%
ggplot(data = ., aes(y = reorder(soft, sum_scores),  x= sum_scores, fill = soft)) +
geom_bar(stat="identity") + ylab("Soft") +
geom_text(aes(label = sum_scores),
hjust = -0.2)+ theme(legend.position="none")
vec <- names(data[25:50]) %>% str_split_i(., "\\[", 2) %>%  str_sub(., 1, -2)
software <- data[25:50] %>%
rename_at(vars(colnames(.)), ~ vec) %>%
mutate_at(vars(vec), function(., na.rm = FALSE) (x = ifelse(.=="Yes", 1, 0)))
d <- data.frame(rowSums(t(software))) %>%  tibble::rownames_to_column(., "soft") %>%
rename_at(vars(colnames(.)), ~ c("soft", "sum_scores"))   %>%
rbind(., other) %>% dplyr::group_by(soft) %>% dplyr::summarise(sum_scores = sum(sum_scores)) %>%
arrange(., desc(sum_scores))
d  %>% filter(sum_scores >= 1) %>%
ggplot(data = ., aes(y = reorder(soft, sum_scores),  x= sum_scores, fill = soft)) +
geom_bar(stat="identity") + ylab("Soft") +
geom_text(aes(label = sum_scores),
hjust = -0.2)+ theme(legend.position="none")
# how to order by diagonal matrix
software <- data[25:50]
ch <- colnames(software)
ch1 <- foreach(i = ch) %do% str_split_i(i, "\\[", 2)
ch1 <- foreach(i = ch1) %do% str_sub(i, 1, -2)
d1 <- foreach(i = colnames(software)) %do% ifelse(software[i]=="Yes", 1, 0)
c <- crossprod(matrix(unlist(d1), ncol = 25))
rownames(c) <- ch1
# upload to the git
library(readxl)
library(foreach)
library(stringr)
library(dplyr)
library(tokenizers)
library(data.table)
library(ggplot2)
library(plyr)
library(quanteda)
library(SemNetCleaner)
library(purrr)
library(tidytext)
library(tm)
library(topicmodels)
library(SnowballC)
library(Matrix)
library(text2vec)
library(tidyr)
library(kableExtra)
# how to order by diagonal matrix
software <- data[25:50]
ch <- colnames(software)
ch1 <- foreach(i = ch) %do% str_split_i(i, "\\[", 2)
ch1 <- foreach(i = ch1) %do% str_sub(i, 1, -2)
d1 <- foreach(i = colnames(software)) %do% ifelse(software[i]=="Yes", 1, 0)
c <- crossprod(matrix(unlist(d1), ncol = 26))
rownames(c) <- ch1
#d <- data.frame(d)
#d$diag <- rowSums(d)
#d <- d[order(d$diag),] %>% dplyr::select(-diag)
colnames(c) <- rownames(c)
#d <- as.matrix(d)
melt(c) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=-0.2))
d1
# how to order by diagonal matrix
# how to add others
software <- data[25:50]
ch <- colnames(software)
ch1 <- foreach(i = ch) %do% str_split_i(i, "\\[", 2)
ch1 <- foreach(i = ch1) %do% str_sub(i, 1, -2)
d1 <- foreach(i = colnames(software)) %do% ifelse(software[i]=="Yes", 1, 0)
c <- crossprod(matrix(unlist(d1), ncol = 26))
rownames(c) <- ch1
#d <- data.frame(d)
#d$diag <- rowSums(d)
#d <- d[order(d$diag),] %>% dplyr::select(-diag)
colnames(c) <- rownames(c)
#d <- as.matrix(d)
melt(c) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=-0.2))
mat <- matrix(c(10, 5, 7, 5, 12, 9, 7, 9, 8), nrow = 3, dimnames = list(c("A", "B", "C"), c("A", "B", "C")))
mat
# reorder the rows and columns by diagonal
diag.order <- order(diag(mat), decreasing = TRUE)
mat_reordered <- mat[diag.order, diag.order]
# print the reordered matrix
mat_reordered
# reorder the rows and columns by diagonal
diag.order <- order(diag(mat), decreasing = FALSE)
mat_reordered <- mat[diag.order, diag.order]
# print the reordered matrix
mat_reordered
# reorder the rows and columns by diagonal
diag.order <- order(diag(mat), decreasing = TRUE)
mat_reordered <- mat[diag.order, diag.order]
# print the reordered matrix
mat_reordered
mat
# print the reordered matrix
mat_reordered
c
diag.order <- order(diag(c), decreasing = TRUE)
mat_reordered <- mat[diag.order, diag.order]
diag.order
mat_reordered <- c[diag.order, diag.order]
melt(mat_reordered) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=-0.2))
diag.order <- order(diag(c), decreasing = FALSE)
mat_reordered <- c[diag.order, diag.order]
melt(mat_reordered) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=-0.2))
melt(mat_reordered) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=-0.2)) +
expand_limits(y = 10)
melt(mat_reordered) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=-0.2)) +
expand_limits(y = 15)
melt(mat_reordered) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=-0.2)) +
expand_limits(y = 50)
melt(mat_reordered) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=-0.2))
melt(mat_reordered) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=-0.2))
melt(mat_reordered) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.8, hjust=-0.2))
melt(mat_reordered) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.9, hjust=-0.2))
melt(mat_reordered) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = 90, vjust = 1.5, hjust=-0.2))
melt(mat_reordered) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = 90, vjust = -0.5, hjust=-0.2))
melt(mat_reordered) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=-0.2))
melt(mat_reordered) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = 180, vjust = 0.5, hjust=-0.2))
melt(mat_reordered) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = 280, vjust = 0.5, hjust=-0.2))
melt(mat_reordered) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=-0.2))
melt(mat_reordered) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=-0.5))
melt(mat_reordered) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=-0.2))
melt(mat_reordered) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = -90, vjust = 0.5, hjust=-0.2))
melt(mat_reordered) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = -90, vjust = 0.5, hjust=0))
melt(mat_reordered) %>% ggplot(., aes(x=Var1, y=Var2)) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "red") +
theme(legend.title = element_blank(),
axis.title=element_blank(),
axis.text.x = element_text(angle = -90, vjust = 1, hjust=0))
