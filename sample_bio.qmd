---
title: "Sample bio"
format:
  html:
    toc: true
    html-math-method: katex
    css: styles.css
    code-fold: true
    code-summary: "Show the code"
editor: visual
---
```{r setup, include=FALSE} 
knitr::opts_chunk$set(warning = FALSE, message = FALSE) 
```

## Setup

```{r, message= FALSE, warning=FALSE, echo=FALSE}
# upload to the git
library(readxl)
library(foreach)
library(stringr)
library(dplyr)
library(tokenizers)
library(data.table)
library(ggplot2)
library(plyr)
library(quanteda)
library(SemNetCleaner)
library(purrr)
library(tidytext)
library(tm)
library(topicmodels)
library(SnowballC)
library(Matrix)
library(text2vec)
library(tidyr)
library(kableExtra)
library(stringr)

```

```{r, message= FALSE, warning=FALSE}
data <- read_excel("data/results-survey3.xlsx")
data <- data[1:121] %>% 
  filter(.[[18]] !='Yes') # not analysed any EEG method
```

## Country

```{r}
data.frame(table(data[8]))  %>% dplyr::rename(country_work = !!names(.)[1]) %>%
  mutate(country_work = ifelse(Freq >= 3, as.character(country_work), "_Others")) %>% group_by(country_work) %>% 
  dplyr::summarise(Freq = sum(Freq)) %>% 
  mutate(percent_score = round(Freq / sum(Freq) * 100)) %>% 
    ggplot(data = ., aes(y = reorder(country_work, percent_score),  x= percent_score, fill = country_work)) +
    geom_bar(stat="identity") + labs(x="Count", y="Country of work of survey participant") +
         geom_text(aes(label = paste0(percent_score, "%")), 
            position = position_stack(vjust = 0.5), size = 5)  + theme_classic()  + theme_classic() + 
  theme(legend.position="none", axis.text.y = element_text(size = 14))

```

## Field

```{r}
field <- as.data.frame(table(data[9])) %>% arrange(desc(Freq)) %>% head(3)
field$Freq[1] <- field$Freq[1] + 1 # from Others
field$Freq[2] <- field$Freq[2] + 1
field$Freq[3] <- field$Freq[3] + 1
field %>% dplyr::rename(area = !!names(.)[1]) %>%
  mutate(percent_score = round(Freq / sum(Freq) * 100)) %>% 
    ggplot(data = ., aes(x = reorder(area, percent_score),  y= percent_score, fill = area)) +
    geom_bar(stat="identity") + labs(x="Field of research", y="Count") +
     geom_text(aes(label = paste0(percent_score, "%")), 
            position = position_stack(vjust = 0.5), size = 6)  + theme_classic() + 
  theme(legend.position="none", axis.text.x = element_text(size = 12))
```

```{r, include=FALSE}
as.data.frame(na.omit(data[10])) 
# recode!!! 
```

## Topic

```{r}
t <- foreach(i = 1:nrow(data)) %do% tokenize_words(as.character(data[i, 11]))
tt <- foreach(i = 1:length(t)) %do% paste(unlist(t[i]), collapse = ' ') 


area <- data.frame(matrix(tt)) %>% dplyr::rename(words = !!names(.)[1]) %>%
   mutate(words2 = case_when(
    grepl("\\bmemory\\b", words) == TRUE ~ "memory", 
    grepl("\\b(empathy|emot\\w*|affective|social)\\b", words) == TRUE ~ "affective neuroscience", 
    grepl("\\b(cognitive load|selective attention|attention|cognition|consciousness|meditation|cognitive control|self|executive functions)\\b", words) == TRUE ~ "cognitive control and attention", 
    grepl("\\b(hearing|audi\\w*)\\b", words) == TRUE ~ "auditory",
    grepl("\\b(decision|reward)\\b", words) == TRUE ~ "decision making",
    grepl("\\b(ageing|aging)\\b", words) == TRUE ~ "ageing",
    grepl('\\bolfac\\w*', words) ~ 'olfaction',
    grepl('\\b(communication|language|speech|biling\\w*|english)\\b', words) ~ 'language and speech',
    grepl('\\bbci\\b', words) ~ 'bci',
    grepl('\\bsleep\\b', words) ~ 'sleep',
    grepl('\\b(timing|time|temporal)\\b', words) ~ 'time',
    grepl('\\bperception\\b', words) ~ 'perception',
    grepl('\\bvis\\w*', words) ~ 'vision',
    grepl('\\b(development\\w*|ageing)\\b', words) ~ 'development',
    grepl('\\b(spatial|brain body|motor|motion)\\b', words) ~ 'motor control',
    grepl('\\b(diagnostics|disorder(s)?|psychiatry|epilepsy|autism|patients|therapy|psychopharmacology|pain|dbs|stimulation)\\b', words) ~ 'mental disorders',
    grepl('\\b(signal|potentials|method\\w*|sdf|ieeg|computational)\\b', words) ~ 'methodology',
    grepl('\\b(olfaction|vision|auditory)\\b', words) ~ 'development',
    ))
   
area %>% group_by(words2) %>% dplyr::summarise(Freq = n()) %>% 
  data.frame(.)  %>% mutate(words2 = as.character(words2)) %>%  #arrange(desc(Freq)) %>% 
    ggplot(data = ., aes(y = reorder(words2, Freq),  x= Freq, fill = words2)) +
    geom_bar(stat="identity") + labs(x="Topic of research", y="Frequency") +
    geom_text(aes(label = Freq), 
    hjust = -0.2) + theme_classic() + theme(legend.position="none")

```

## Method

```{r, message= FALSE, warning=FALSE}
method <- data[14:17]
ch <- colnames(method)
ch1 <- foreach(i = ch) %do% str_split_i(i, "\\? \\[", 2) 
colnames(method) <- foreach(i = ch1) %do% str_sub(i, 1, -2)
d <- data.frame(rowSums(t(data.frame(foreach(i = colnames(method)) %do% ifelse(method[i]=="Yes", 1, 0))))) 
d <- tibble::rownames_to_column(d, "plots") 
colnames(d) <- c("method", "sum_scores")
d %>% arrange(desc(sum_scores)) %>% 
    ggplot(., aes(x = reorder(method, sum_scores), y = sum_scores, fill = method)) +
    geom_col(stat = "identity") + labs(x = "Method", y = "Value", fill = "Method") +
    theme_classic() + theme(legend.position="none") + 
  geom_text(aes(label = sum_scores), vjust = -0.2)
```

## Experience

#### Papers

```{r, message= FALSE, warning=FALSE}
data[19] %>% dplyr::rename(papers = !!names(.)[1]) %>% filter(papers < 100) %>%  ggplot(data = ., aes(papers)) +
  geom_histogram() +
  labs(x ="How many published papers/preprints do you have, where you used EEG, MEG or iEEG analysis?") + theme_classic()
# PCA for clustering it 
```
```{r}
data[19] %>% dplyr::rename(papers = !!names(.)[1]) %>% filter(papers < 100) %>% summarise(median_paper = median(papers))
```

#### Position

```{r}
#na.omit(data[13]) # recode Others
as.data.frame(table(na.omit(data[12]))) %>% dplyr::rename(position = !!names(.)[1]) %>%
  arrange(desc(Freq)) %>% 
    ggplot(data = ., aes(y = reorder(position, Freq),  x= Freq, fill = position)) +
    geom_bar(stat="identity") + ylab("Position") +
    geom_text(aes(label = Freq), hjust = -0.2) + 
  theme_classic() + theme(legend.position="none")
```

#### Years

```{r, message= FALSE, warning=FALSE}
data %>% filter(.[[20]] < 50) %>% ggplot(data = ., aes_(as.name(names(data)[20]))) +
  geom_histogram(bins = 45) +  scale_x_continuous(breaks=seq(0, 30, 5)) +
  labs(x ="Years of experience with EEG, MEG, or iEEG analysis", y="Count") +
  theme_classic() + theme(legend.position="none", axis.text.x = element_text(size = 12)) 
```
```{r}
data %>% filter(.[[20]] < 50) %>% summarise(median_year = median(.[[20]]))
```


#### Self-assessed level

```{r}
table(data[21]) %>% data.frame()%>% dplyr::rename(level = !!names(.)[1]) %>%
    mutate(percent_score = round(Freq / sum(Freq) * 100)) %>% 
    ggplot(data = ., aes(x = level, y= percent_score, fill = level)) +
  
    geom_bar(stat="identity") + xlab("Self-assessed level") +
   geom_text(aes(label = paste0(percent_score, "%")), 
            position = position_stack(vjust = 0.5), size = 6)  + theme_classic() +
  theme(legend.position="none", axis.text.x = element_text(size = 12)) +
    scale_x_discrete(limits = c("Beginner", "Intermediate", "Expert")) +
  labs(y="Count") 

```

#### Code contribution

```{r}
table(data[22])  %>% data.frame()%>% dplyr::rename(level = !!names(.)[1]) %>%
    mutate(percent_score = round(Freq / sum(Freq) * 100)) %>% 
    ggplot(data = ., aes(x = reorder(level, Freq),  y= Freq, fill = level)) +
    geom_bar(stat="identity") + xlab("Code contribution") +
    geom_text(aes(label = paste0(percent_score, "%")), position = position_stack(vjust = 0.5), size = 6)  +
  theme_classic() +
  theme(legend.position="none", axis.text.x = element_text(size = 12)) +
  labs(y="Count") 
```

## Time of finishing survey in minutes

```{r}
median(as.numeric(as.matrix(data[121]))) / 60
```
